local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local NameTagColor = Color3.fromRGB(255,0,0)
local DistanceTagColor = Color3.fromRGB(0,0,255)
local HealthTagColor = Color3.fromRGB(0,255,0)

local NameTagPosition = UDim2.new(0,0,0,0)
--local DistanceTagPosition = UDim2.new(0,0,0.3,0)
--local HealthTagPosition = UDim2.new(0,0,0.6,0)
local HealthTagPosition = UDim2.new(0,0,0,-15)

local function GetPDistance(_player)
	if Player.Character and _player.Character then
        local myHrp, Hrp = Player.Character:FindFirstChild("HumanoidRootPart"), _player.Character:FindFirstChild("HumanoidRootPart")
        if myHrp and Hrp then
		    return math.floor((myHrp.Position - Hrp.Position).Magnitude + 0.5) 
        end
	end
end

local function CreateTextLabel(args)
	-- Creates Name Tag --
	local newText = Instance.new("TextLabel")

    for _,v in pairs(args) do
        newText[_] = v
    end
end

local function CreateTag(part)
	-- Creates BillBoard --
	local newBillBoard = Instance.new("BillboardGui")
	-- Data --
	newBillBoard.Name = "PlayerTag"
	newBillBoard.Parent = part
	newBillBoard.AlwaysOnTop = true
	newBillBoard.Size = UDim2.new(0, 250,0, 100)
	newBillBoard.ExtentsOffset = Vector3.new(0,1,0)

	CreateTextLabel({
        Name = "NameTag", 
        Parent = newBillBoard, 
        TextColor3 = NameTagColor, 
        Position = NameTagPosition,
        TextSize = 13,
        Font = Enum.Font.Legacy,
        BackgroundTransparency = 1,
        Size = UDim2.new(1,0,0.3,0)
    })

	CreateTextLabel({
        Name = "HealthTag", 
        Parent = newBillBoard, 
        TextColor3 = HealthTagColor, 
        Position = HealthTagPosition,
        TextSize = 13,
        Font = Enum.Font.Legacy,
        BackgroundTransparency = 1,
        Size = UDim2.new(1,0,0.3,0)
    })

end

local function AddESP(_player)
	if _player.Character then
		local _head = _player.Character:FindFirstChild("Head")
		if _head then
			if not _head:FindFirstChild("PlayerTag") then
                CreateTag(_head)
            end
		end
	end
end

local function RemoveESP(_player)
	if _player.Character then
		local _head = _player.Character:FindFirstChild("Head")
		if _head then
            local tag = _head:FindFirstChild("PlayerTag")
			if tag then tag:Destroy() end
		end
	end
end

local function UpdateTag(_player)
	if not (_player and _player.Character) then return end

	local character = _player.Character
	local head = character:FindFirstChild("Head")
	local humanoid = character:FindFirstChild("Humanoid")

	if not (head and humanoid) then return end

	local tag = head:FindFirstChild("PlayerTag")
	if not tag then return end

	local name = _player.DisplayName
	local distance = GetPDistance(_player) or 0
	local health = math.floor(humanoid.Health + 0.5)
    local teamColor = _player.Team and _player.Team.TeamColor.Color

    if not (name and distance and health) then return end

	tag.NameTag.Text = string.format("%s[%d]", name, distance)
    tag.NameTag.TextColor3 = teamColor or NameTagColor
	tag.HealthTag.Text = "Health: " .. health
end

getgenv().ESPOn = function()

	--Adds / Updates 
	RunService:BindToRenderStep("UpdateESP", Enum.RenderPriority.Character.Value, function()
        for _, v in pairs(Players:GetPlayers()) do
            if v ~= Player then
                task.spawn(function()
                    AddESP(v)
                    UpdateTag(v)
                end)
            end
        end
	end)

end

getgenv().ESPOff = function()
	RunService:UnbindFromRenderStep("UpdateESP")

	for _,v in pairs(Players:GetPlayers())do
		if v ~= Player then RemoveESP(v) end
	end
end