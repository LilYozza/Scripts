print("Version 5.0.3")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local PlayerCon = {}

local NameTagColor = Color3.fromRGB(255,0,0)
local DistanceTagColor = Color3.fromRGB(0,0,255)
local HealthTagColor = Color3.fromRGB(0,255,0)

local NameTagPosition = UDim2.new(0,0,0,0)
--local DistanceTagPosition = UDim2.new(0,0,0.3,0)
--local HealthTagPosition = UDim2.new(0,0,0.6,0)
local HealthTagPosition = UDim2.new(0,0,0,-15)

local function GetPDistance(player)
	local Playerchar = Player.Character
	local char = player.Character
	if Playerchar and char then
		return math.floor((Playerchar.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude + 0.5) 
	end
end

local function CreateTextLabel(name, parent, color, position)
	-- Creates Name Tag --
	local newText = Instance.new("TextLabel")
	-- Data --
	newText.Name = name
	newText.Parent = parent
	newText.Size = UDim2.new(1,0,0.3,0)
	newText.Position = position
	newText.BackgroundTransparency = 1
	--newText.TextScaled = true

	-- Text --
	newText.TextSize = 13
	newText.Font = Enum.Font.Legacy
	newText.TextColor3 = color
end

local function CreateTag(part)
	if part:FindFirstChild("PlayerTag") then return end
	-- Creates BillBoard --
	local newBillBoard = Instance.new("BillboardGui")
	-- Data --
	newBillBoard.Name = "PlayerTag"
	newBillBoard.Parent = part
	newBillBoard.AlwaysOnTop = true
	newBillBoard.Size = UDim2.new(0, 250,0, 100)
	newBillBoard.ExtentsOffset = Vector3.new(0,1,0)


	CreateTextLabel("NameTag", newBillBoard, NameTagColor, NameTagPosition)
	--CreateTextLabel("DistanceTag", newBillBoard, DistanceTagColor, DistanceTagPosition)
	CreateTextLabel("HealthTag", newBillBoard, HealthTagColor, HealthTagPosition)

end

local function AddESP(player)
	-- ADD TAG TO PLAYER
	local char = player.Character
	if char then
		local _head = char:FindFirstChild("Head")
		if _head then
			local _tag = _head:FindFirstChild("PlayerTag")
			if not _tag then CreateTag(_head) end
		end
	end
end

local function RemoveESP(player)
	if PlayerCon[player.UserId] then PlayerCon[player.UserId]:Disconnect() end
	local char = player.Character
	if char then
		local _head = char:FindFirstChild("Head")
		if _head then
			local _tag = _head:FindFirstChild("PlayerTag")
			if _tag then _tag:Destroy() end
		end
	end
end

local function UpdateTag(player)
	if player ~= nil then
		local char = player.Character
		local MyChar =Player.Character

		if char and MyChar then

			local Find2 = MyChar:FindFirstChild("HumanoidRootPart")
			local Find3 = char:FindFirstChild("HumanoidRootPart")
			local Find4 = char:FindFirstChildOfClass("Humanoid")

			if Find2 and Find3 then
				local Tag = player.Character.Head:FindFirstChild("PlayerTag")
				if not Tag then return end

				local PlayerName = player.DisplayName
				local Distance = GetPDistance(player)
				local Health = math.floor(char.Humanoid.Health + 0.5)

				Tag.NameTag.Text = PlayerName.."["..Distance.."]"
				--Tag.DistanceTag.Text = "Distance: "..Distance
				Tag.HealthTag.Text = "Health: "..Health
			end
		end
	end
end

local AllPlayerCon, AllPlayerRemoveCon, workCon
getgenv().ESPOn = function()
	--ON PLAYERS JOINING GAME
	AllPlayerCon = Players.PlayerAdded:Connect(function(player)
		--ON NEW CHARACTER FROM PLAYER
		PlayerCon[player.UserId] = player.CharacterAdded:Connect(function(char)
			local _head = char:WaitForChild("Head")
			AddESP(player)
		end)
	end)
	
	workspace.ChildAdded:Connect(function(part)
		if Players:FindFirstChild(part.Name) then
			repeat task.wait()until part
			local _char = part.Character
			if _char then
				local _player = Players:GetPlayerFromCharacter(_char)
				if _player and not PlayerCon[_player.UserId] then 
					local _head = _char:WaitForChild("Head")
					AddESP(_player)
					PlayerCon[_player.UserId] = _player.CharacterAdded:Connect(function()
						local _head = _char:WaitForChild("Head")
						AddESP(_player)
					end)
				end
			end
		end
	end)
	
	--ON PLAYER LEAVING GaME
	AllPlayerRemoveCon = Players.PlayerRemoving:Connect(function(player)
		RemoveESP(player)
	end)

	for _,v in pairs(Players:GetPlayers())do
		if v ~= Player then
			PlayerCon[v.UserId] = v.CharacterAdded:Connect(function(char) 
				local _head = char:WaitForChild("Head")
				AddESP(v)
			end)
			AddESP(v)
		end
	end

	--RUN SERICE BIND
	RunService:BindToRenderStep("UpdateESP", Enum.RenderPriority.Character.Value, function()
		for _,v in pairs(Players:GetPlayers())do
			if v ~= Player then UpdateTag(v) end
		end
	end)

end

getgenv().ESPOff = function()
	RunService:UnbindFromRenderStep("UpdateESP")

	if AllPlayerCon then AllPlayerCon:Disconnect() end
	if AllPlayerRemoveCon then AllPlayerRemoveCon:Disconnect() end

	for _,v in pairs(Players:GetPlayers())do
		if v ~= Player then RemoveESP(v) end
	end
end



