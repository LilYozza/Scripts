w = library:CreateWindow("Main")

local RunService = game:GetService("RunService")
local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")


-->Base Variables<--
local PlayerSelect = "All"

-->Tables<--

-->Non Return Functions<--

-->Return Functions<--
local function getCartFolder()
    for _,v in pairs(Workspace:GetChildren()) do
        local c1 = v:GetChildren()[1]
        if c1 then 
            if c1.Name:lower():match("click to spawn")then
                return v
            end
        end
    end
end
local function getCartBtn(_toggle)
    local pCart = GetVehicleModel(Player)
    if pCart then
        local btn = pCart:FindFirstChild(_toggle)
        return btn
    end
end

local upBtn, downBtn, onBtn
local Carts = getCartFolder()

Auto:Button("Op Cart",function()
    spawn(function()local s,e=pcall(function()
        local PCart=Player.Character:WaitForChild("Humanoid").SeatPart
        if PCart then 
            for _,v in pairs(PCart.Parent:GetDescendants())do
                if v.Name=="gray" and v:IsA("BasePart")then v.Transparency=1 v.Size=Vector3.new(10,1,1)end
            end
            repeat fireclickdetector(PCart.Parent.Up.Click)task.wait()until PCart.Parent.Speed.Value>=550
        end end)if not s then print(e)end
    end)
end)


Auto:Toggle("Speed Up",function(bool)
    shared.ToggleSU=bool
    spawn(function()
        while shared.ToggleSU do
            if upBtn then
                fireclickdetector(upBtn.Click)
            else
                upBtn = getCartBtn("Up")
            end
            task.wait()
        end
    end)
end)

Auto:Toggle("Speed Down",function(bool)
    shared.ToggleSD=bool
    spawn(function()
        while shared.ToggleSD do
            if downBtn then
                fireclickdetector(downBtn.Click)
            else
                downBtn = getCartBtn("Down")
            end
            task.wait()
        end
    end)
end)

Auto:Button("Break",function()
    spawn(function()
        if not onBtn then onBtn = getCartBtn("On") end
        if onBtn then
            fireclickdetector(onBtn.Click)
        end
    end)
end)

local function toggleCarts(_toggle)
    for _,v in pairs(Carts:GetChildren()) do
        for j,k in pairs(v:GetChildren()) do
            if k:IsA("Model") and k.Name == "Cart" and k ~= GetVehicleModel(Player) then
                for i,part in pairs(k:GetDescendants()) do
                    if part:IsA("BasePart") then part.CanCollide = _toggle end
                end
            end
        end
    end
    return
end


local PCConnection
Auto:Toggle("No Collide",function(bool)
    shared.Toggle3=bool
    spawn(function()

        if shared.Toggle3 then
            PCConnection = RunService.Stepped:Connect(function()
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= Player and player.Character then
                        for _, v in pairs(player.Character:GetDescendants()) do
                            if v:IsA("BasePart") then
                                v.CanCollide = false
                            end
                        end
                    end
                end
                local hum = Player.Character and Player.Character:WaitForChild("Humanoid")
                if hum and hum.Sit == true then
                    toggleCarts(false)
                end
            end)

        else
            if PCConnection then PCConnection:Disconnect() PCConnection = nil end
            toggleCarts(true)
        end
    end)
end)

local _bool1 = false
Auto:Button("Stop/Go",function()
    spawn(function()
        _bool1 = not _bool1
        Player.Character:WaitForChild("HumanoidRootPart").Anchored = _bool1
    end)
end)

-->Base Variables<--
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")



local assistForce = 10


-->Non Return Functions<--

-->Return Functions<--
Auto:Slider("Force",{
    min = 0; max = 1000; precise = true;
},function(value) assistForce = value end)

local uis1, uis2, rs
Auto:Toggle("Assist",function(bool)
    shared.ToggleA=bool
    spawn(function()
        if shared.ToggleA then
            local moveForward = false
            local moveBackward = false
            -- Input handling
            uis1 = UserInputService.InputBegan:Connect(function(input, gpe)
                if gpe then return end
                if input.KeyCode == Enum.KeyCode.W then moveForward = true end
                if input.KeyCode == Enum.KeyCode.S then moveBackward = true end
            end)
            uis2 = UserInputService.InputEnded:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.W then moveForward = false end
                if input.KeyCode == Enum.KeyCode.S then moveBackward = false end
            end)     
            -- Gentle assist loop
            rs = RunService.Heartbeat:Connect(function(dt)
                local root = Player.Character and Player.Character:WaitForChild("Humanoid", 5).SeatPart
                if not root then return end

                local direction = Vector3.zero
                if moveForward then
                    direction = root.CFrame.LookVector * assistForce
                elseif moveBackward then
                    direction = -root.CFrame.LookVector * assistForce
                end

                -- Light push instead of replacing velocity
                root.Velocity = root.Velocity + (direction * dt)
            end)
        else
            uis1:Disconnect() uis1 = nil
            uis2:Disconnect() uis2 = nil
            rs:Disconnect() rs = nil
        end
    end)
end)





