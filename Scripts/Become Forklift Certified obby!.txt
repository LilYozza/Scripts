local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()w = library:CreateWindow("Main")
local Essential_Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Essential_Functions.txt"))()


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")

-->Base Variables<--
local replaceTable = {"Ice", "KillBrick", "Conveyor"}

local Stage = Player.leaderstats:FindFirstChild("Stage")
local Checkpoints = Workspace:FindFirstChild("Checkpoints")
local Obby = Workspace:FindFirstChild("Obby")

-->Non Return Functions<--


-->Return Functions<--
local function createPart(className, props)
    local _newPart = Instance.new(className)
    if _newPart then
        for _,v in pairs(props) do 
            _newPart[_] = v
        end
        print(_newPart.Position.Y)
    end
    return _newPart
end

local partStorage = {}
local y1 = 1 

local function Replace(part)
    if partStorage[part] then return end

    local replacementPart = Instance.new("Part")
    replacementPart.Size = part.Size
    replacementPart.CFrame = part.CFrame
    replacementPart.Anchored = true
    replacementPart.BrickColor = BrickColor.new("Lime green")
    --replacementPart.CanCollide = part.Position.Y <= y1

    replacementPart.Parent = part.Parent

    part.Parent = nil
    partStorage[replacementPart] = part
end

local function RevertAll()
    for replacementPart, originalPart in pairs(partStorage) do
        originalPart.Parent = replacementPart.Parent
        replacementPart:Destroy()
    end
    partStorage = {}
end


Auto:Toggle("Auto Win",function(bool)
    shared.ToggleAW=bool
    spawn(function()
        while shared.ToggleAW do
            local Forklift = Player.Character:WaitForChild("Forklift")
            if Forklift then
                local Hitbox = Forklift.Body:FindFirstChild("Hitbox")
                if Hitbox then 
                    Touch(Hitbox, Checkpoints[Stage.Value + 1], 0.3)
                end
            end
            task.wait()
        end
    end)
end)

Auto:Button("Skip",function()
    spawn(function()
        local Forklift = Player.Character:WaitForChild("Forklift")
        if Forklift then
            local Hitbox = Forklift.Body:FindFirstChild("Hitbox")
            if Hitbox then 
                Touch(Hitbox, Checkpoints[Stage.Value + 1])
            end
        end
    end)
end)


Auto:Button("No KillParts",function()
    spawn(function()
        for _,v in pairs(Obby:GetDescendants())do
            if v:IsA("TouchTransmitter") then

                v:Destroy()
            end
        end
    end)
end)

Auto:Toggle("Easy",function(bool)
    shared.ToggleE=bool
    spawn(function()
        if shared.ToggleE then
            for _,v in pairs(Obby:GetDescendants())do
                if v:IsA("BasePart") then
                    if table.find(replaceTable, v.Name) then
                        Replace(v)
                    end
                end
            end
        else
            RevertAll()
        end
    end)
end)

Auto:Toggle("No Fall",function(bool)
    shared.ToggleNF=bool
    spawn(function()
        if shared.ToggleNF then
            local noFallPart = Workspace:FindFirstChild("noFallPart") or
            createPart("Part", {
                Name = "noFallPart",
                Parent = Workspace,
                Position = Vector3.new(0, -0.5, -0.35),
                Anchored = true,
                Transparency = 0.85,
                Size = Vector3.new(1000,1,1000),
                BrickColor = BrickColor.new("Lime green")
            })
        else
            local noFallPart = Workspace:FindFirstChild("noFallPart")
            if noFallPart then noFallPart:Destroy() end
        end

    end)
end)



local Miscload = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Misc.txt'))()
