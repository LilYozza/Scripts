local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()w = library:CreateWindow("Main")
local Essential_Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Essential_Functions.txt"))()


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")

-->Base Variables<--
local colorNames = {
    Blue = "Bright blue",
    Green = "Bright green",
    Orange = "Bright orange",
    Pink = "Hot pink",
    Purple = "Bright purple",
    Teal = "Bright blue", -- Roblox doesn't have a direct Teal; this is the closest match
    White = "Institutional white",
    Yellow = "Bright yellow",
    Red = "Bright red"
}

local GameplayAssets = game:GetService("Workspace"):WaitForChild("GameplayAssets")
local ChristmasEvent = GameplayAssets:WaitForChild("ChristmasEvent")
local Monsters = GameplayAssets:WaitForChild("Monsters")
local Items = GameplayAssets:WaitForChild("Items")
local Normal = Items:WaitForChild("Normal")
local GameplayParts = game:GetService("Workspace"):WaitForChild("GameplayParts")
local Doors = GameplayParts:WaitForChild("Doors")


-->Non Return Functions<--
local function exePrompt(_p)
    local Root = _p:FindFirstChild("Root")
    if Root and Root:FindFirstChild("ProximityPrompt") then
        local _old = Player.Character:WaitForChild("HumanoidRootPart").CFrame
        MoveTo(Root) task.wait(0.3)
        fireproximityprompt(Root.ProximityPrompt) task.wait(0.1)
        MoveTo(_old) task.wait(0.1)
    end   
end

-->Return Functions<--
Auto:Button("Spawn",function()
    spawn(function()
        MoveTo(game:GetService("Workspace").SpawnLocation)
    end)
end)


local EnemyTbl = {}
Auto:Toggle("ESP Enemy",function(bool)
    shared.ToggleEE=bool
    spawn(function()
        if shared.ToggleEE then
            for _,v in pairs(Monsters:GetChildren()) do
                local hrp = v:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local _t = Tag(hrp, true, hrp.Parent.Name)
                    _t[3].TextColor3 = Color3.fromRGB(0,255,0)
                    table.insert(EnemyTbl, _t)
                end
            end

        else
            for _,v in pairs(EnemyTbl) do
                if v then
                    Tag(v[1], false)
                end
            end
        end
    end)
end)

local DoorTbl = {}
Auto:Toggle("ESP Door",function(bool)
    shared.ToggleED=bool
    spawn(function()
        if shared.ToggleED then
            for _,v in pairs(Doors:GetDescendants()) do
                if v and v.Name == "Core" and v:IsA("Part") then
                    local _t = Tag(v, true, v.Parent.Name)
                    if colorNames[v.Parent.Name] then
                        _t[3].TextColor3 = BrickColor.new(colorNames[v.Parent.Name]).Color
                    else
                        _t[3].TextColor3 = BrickColor.new("Medium stone grey").Color
                    end
                    table.insert(DoorTbl, _t)                    
                end
            end
        else
             for _,v in pairs(DoorTbl) do
                if v then
                    Tag(v[1], false)
                end
            end       
        end
    end)
end)

local ItemTbl = {}
Auto:Toggle("ESP Item",function(bool)
    shared.ToggleEI=bool
    spawn(function()
        if shared.ToggleEI then
            for _,v in pairs(Items:GetDescendants()) do
                if v and v.Name == "Core" and v:IsA("Part") then
                    local _t = Tag(v, true, v.Parent.Name)
                    _t[3].TextColor3 = BrickColor.new("Reddish brown").Color
                    table.insert(ItemTbl, _t)                    
                end
            end
        else
             for _,v in pairs(ItemTbl) do
                if v then
                    Tag(v[1], false)
                end
            end       
        end
    end)
end)

Auto:Button("Paint Brushes",function()
    spawn(function()
        local _items = SortTableByNumber(Items.Collectable.Collectable:GetChildren())
        for _,v in pairs(_items) do
            exePrompt(v)
        end
    end)
end)

local sPaint
local DropList1 = Auto:Dropdown("Select Paint",Normal.PaintBucket:GetChildren(),true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sPaint = Normal.PaintBucket:FindFirstChild(SItem)
end)

Auto:Button("Get Bucket",function(bool)
    spawn(function()
        if sPaint then
            exePrompt(sPaint)
        end
    end)
end)

local selectItem = "All"
local DropList2 = Auto:Dropdown(selectItem,{"All", unpack(Normal.Tool:GetChildren())},true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    selectItem = SItem
end)

Auto:Button("Get Item",function(bool)
    spawn(function()
        if selectItem == "All" then
            for _,v in pairs(Normal.Tool:GetChildren()) do
                exePrompt(v)
            end
        else
            local item = Normal.Tool:FindFirstChild(selectItem)
            if item then
                exePrompt(item)
            end
        end
    end)
end)

Auto:Toggle("Auto Presents",function(bool)
    shared.ToggleAP=bool
    spawn(function()
        while shared.ToggleAP do
            for _,v in pairs(ChristmasEvent:GetDescendants())do
                if v and v:IsA("TouchTransmitter") then
                    Touch(v.Parent, 0.1)
                end
            end
            task.wait()
        end
    end)
end)

local Miscload = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Misc.txt'))()
