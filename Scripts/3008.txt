local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()w = library:CreateWindow("Main")

local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")

local Auto = w:CreateFolder("Auto")

local ItemSelect, SetBase, SetDump
local ItemsList = {}
local GameObjects = Workspace:FindFirstChild("GameObjects")
local Physical = GameObjects:FindFirstChild("Physical")
local Map = Physical:FindFirstChild("Map")

for _,v in pairs(Map:GetDescendants()) do
    if v.Name == "Root" and v:FindFirstAncestor("Items") then
        if not table.find(ItemsList, v.Parent.Name) then
            table.insert(ItemsList, v.Parent.Name)
        end
    end
end
table.sort(ItemsList, function(a, b) return a:byte() < b:byte() end)

function TweenTo(part, distance)
    Player.Character:WaitForChild("HumanoidRootPart").Anchored = true
    CurrentTween = TweenService:Create(Player.Character:WaitForChild("HumanoidRootPart"), TweenInfo.new(distance/80,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false,0), {CFrame = part})
    CurrentTween:Play()
    task.wait(distance/80)
    Player.Character:WaitForChild("HumanoidRootPart").Anchored = false
end

local DropList = Auto:Dropdown("Select Item",ItemsList,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    ItemSelect = SItem
end)

Auto:Toggle("Auto Collect",function(bool)
    shared.toggle1 = bool
    spawn (function()
        while shared.toggle1 do
            if table.find(ItemsList, ItemSelect) then
                for key, value in pairs(Map:GetDescendants()) do
                    if value:FindFirstChild("Root") and SetBase == nil then SetBase = Player.character:WaitForChild("HumanoidRootPart").CFrame end
                    if value.Name == ItemSelect and value:FindFirstChild("Root") and shared.toggle1 and (value:FindFirstChild("Root").Position - SetBase.Position).magnitude > 100 then
                        distance = (value:FindFirstChild("Root").Position - Player.character:WaitForChild("HumanoidRootPart").Position).magnitude
                        if SetDump ~= nil then back = SetDump else back = Player.character:WaitForChild("HumanoidRootPart").CFrame end
                        TweenTo(value:FindFirstChild("Root").CFrame, distance)
                        task.wait(5)
                        TweenTo(back, distance)
                        task.wait(5)
                    end
                end
            end
            task.wait(1)
        end
    end)
end)

Auto:Button("GoTo Item",function()
    pcall(function()
        if table.find(ItemsList, ItemSelect) then
            for key, value in pairs(Map:GetDescendants()) do
                if value:FindFirstChild("Root") and SetBase == nil then SetBase = Player.character:WaitForChild("HumanoidRootPart").CFrame end
                if value.Name == ItemSelect and value:FindFirstChild("Root") and (value:FindFirstChild("Root").Position - SetBase.Position).magnitude > 100 then
                    distance = (value:FindFirstChild("Root").Position - Player.character:WaitForChild("HumanoidRootPart").Position).magnitude
                    if SetDump ~= nil then back = SetDump else back = Player.character:WaitForChild("HumanoidRootPart").CFrame end
                    TweenTo(value:FindFirstChild("Root").CFrame, distance)
                    break
                end
            end
        end
        wait(1)
    end)
end)

Auto:Button("SetBase Location",function()
    SetBase = Player.character:WaitForChild("HumanoidRootPart").CFrame
end)

Auto:Button("SetDump Location",function()
    SetDump = Player.character:WaitForChild("HumanoidRootPart").CFrame
end)

Auto:Button("Teleport To Base",function()
    if SetBase ~= nil then Player.character:WaitForChild("HumanoidRootPart").CFrame = SetBase end
end)

local Miscload = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Misc.txt'))()