local SaveDataManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/LilYozza/Scripts/refs/heads/main/Misc/SaveManager.txt"))()
w = library:CreateWindow("Main")

local rs = game:GetService("ReplicatedStorage")
local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")

-->Base Variables<--
local Stage = Player:WaitForChild("leaderstats").WORLD

local Map = Workspace:WaitForChild("Map")
local Stages = Map:FindFirstChild("Stages")


local Boosts = Stages:FindFirstChild("Boosts")
local TerrainWalls = Stages:FindFirstChild("TerrainWalls")
local SafeZones = Stages:FindFirstChild("SafeZones")

-->Non Return Functions<--
local function fireEvent(...)
    rs.RemoteEvent:FireServer({...})
    --print("Fired Remote:", ...)
end

local function fireFunction(...)
     rs.RemoteFunction:InvokeServer({...})
    --print("Fired Function:", ...)   
end

-->Return Functions<--
local function getBoosts(_stage)
    _stage = _stage or Stage.Value
    local world = Boosts:FindFirstChild(_stage)
    return world
end

local function getSafeZone(_stage)
    _stage = _stage or Stage.Value
    local world = SafeZones:FindFirstChild(_stage)
    return world
end

local function sortByItemName(items)
    local sortedItems = {table.unpack(items)} -- Create a copy to avoid modifying the original table
    table.sort(sortedItems, function(a, b)
        local aMain, aSub = a.name:match("MAP_(%d+)_(%d+)")
        local bMain, bSub = b.name:match("MAP_(%d+)_(%d+)")
        aMain, aSub = tonumber(aMain), tonumber(aSub)
        bMain, bSub = tonumber(bMain), tonumber(bSub)
        if aMain == bMain then
            return aSub > bSub -- Reverse for sub-number
        end
        return aMain > bMain -- Reverse for main number
    end)
    return sortedItems
end

Auto:Button("Safe Zone",function()
    spawn(function()
        local stage = getSafeZone()
        if stage then
            MoveTo(stage:GetChildren()[1], Vector3.new(0,5,0))
        end
    end)
end)

Auto:Toggle("Auto Punch",function(bool)
    shared.ToggleAP=bool
    spawn(function()
        while shared.ToggleAP do
            fireEvent("Activate_Punch")
            task.wait(1)
        end
    end)
end)


Auto:Toggle("Auto Collect",function(bool)
    shared.ToggleAC=bool
    spawn(function()
        while shared.ToggleAC do
            local curStage = getBoosts()
            if curStage then

                local newTable = sortByItemName(curStage:GetChildren())
                local firstItem = newTable[1]

                if firstItem and curStage.Name == tostring(Stage.Value) and shared.ToggleAC then
                    for __,_v in pairs(firstItem:GetChildren()) do
                        local part = _v:FindFirstChildWhichIsA("TouchTransmitter")
                        if part and shared.ToggleAC then
                            Touch(_v, 0.4)
                            break
                        end
                    end
                end

            end
            task.wait()
        end
    end)
end)

Auto:Toggle("Next World",function(bool)
    shared.ToggleNW=bool
    spawn(function()
        while shared.ToggleNW do
            fireEvent("WarpPlrToOtherMap", "Next")
            task.wait(0.3)
        end
    end)
end)

Auto:Toggle("Safe Zone",function(bool)
    shared.ToggleSZ=bool
    spawn(function()
        while shared.ToggleSZ do
            local stage = getSafeZone()
            if stage then
                local point = stage:GetChildren()[1]
                local Distance = GetDistance(point)
                if point and Distance and Distance > 5 then
                    MoveTo(point, Vector3.new(0,5,0))
                end
            end
            task.wait(1)
        end
    end)
end)

Auto:Toggle("Pet Upgrade",function(bool)
    shared.TogglePU=bool
    spawn(function()
        while shared.TogglePU do -- CHECK IF CAN
            fireEvent("UpgradeCurrentPet")
            task.wait(1)
        end
    end)
end)

Auto:Toggle("No Walls",function(bool)
    shared.ToggleNWW=bool
    spawn(function()
        while shared.ToggleNWW do
            Workspace.Terrain:Clear()
            task.wait(1)
        end
    end)
end)

shared.cOrbs = 250
Auto:Slider("Orbs",{
    min = 1; -- min value of the slider
    max = 250; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    shared.cOrbs = value
end)

Auto:Toggle("Server Hop",function(bool)
    shared.ToggleSH=bool
    spawn(function()
        while shared.ToggleSH do
            local curStage = getBoosts()
            if curStage and #curStage:GetChildren() <= shared.cOrbs then
                NewServer() task.wait(5)
            end
            task.wait(0.5)
        end
    end)
end)


local dataToSave = {
    ["Auto Punch"] = {var = "ToggleAP"},
    ["Auto Collect"] = {var = "ToggleAC"},
    ["Next World"] = {var = "ToggleNW"},
    ["Safe Zone"] = {var = "ToggleSZ"},
    ["Pet Upgrade"] = {var = "TogglePU"},
    ["No Walls"] = {var = "ToggleNWW"},
    ["Orbs"] = {var = "cOrbs"},
    ["Server Hop"] = {var = "ToggleSH"},
} SaveManager(dataToSave)
