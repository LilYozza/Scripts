w = library:CreateWindow("Main")


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")
local Troll = w:CreateFolder("Troll")

-->Base Variables<--
local RoundParts = Workspace:FindFirstChild("RoundParts")
local FinishCheck = RoundParts:FindFirstChild("FinishCheck")

local Map = Workspace:FindFirstChild("Map")
local WinnersArea = Map:FindFirstChild("WinnersArea")
local Lobby = Map:FindFirstChild("Lobby")

local selectItem
local shopItems = {"Banana", "Landmine", "Sword", "Helemt", "Shield"}


-->Non Return Functions<--
local function shopBuy(_item) --input string
    local t = {
        ["name"] = _item,
        ["price"] = 0
    }
    game:GetService("ReplicatedStorage").Remotes.FromClient.ShopPurchase:FireServer(t)
end

-->Return Functions<--

Auto:Button("Start",function()
    spawn(function()
        MoveTo(Lobby:FindFirstChildWhichIsA("SpawnLocation"))
    end)
end)


Auto:Button("Finish",function()
    spawn(function()
        MoveTo(FinishCheck, Vector3.new(0,-15,0))
    end)
end)


local DropList = Auto:Dropdown("Select Item",shopItems,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    selectItem = SItem
end)


Auto:Button("Get Item",function()
    spawn(function()
        if selectItem then
            shopBuy(selectItem)
        end
    end)
end)


Auto:Toggle("Auto Win",function(bool)
    shared.ToggleAW=bool
    spawn(function()
        while shared.ToggleAW do
            if FinishCheck and WinnersArea then
                local back = GetPos()
                Touch(FinishCheck)
                -- TOUCH TELEPORT BACK
                Touch(WinnersArea.FinishArea.Teleporter,0.1)
                MoveTo(back)
            end
            task.wait()
        end
    end)
end)



Auto:Toggle("No Slide",function(bool)
    shared.ToggleNS=bool
    spawn(function()
        if shared.ToggleNS then
            while shared.ToggleNS do
                if Player.Character then
                    Player.Character.Ragdoll.RagdollClient.Disabled = true
                    local fallAni = Player.Character.Animate:FindFirstChild("fall")
                    if fallAni then fallAni:Destroy() end
                end
                task.wait()
            end
        else
            Player.Character.Ragdoll.RagdollClient.Disabled = false
        end
    end)
end)

Auto:Toggle("Free Shield",function(bool)
    shared.ToggleFS=bool
    spawn(function()
        while shared.ToggleFS do
            if Player.Character then
                local shield = Player.Character:FindFirstChild("Shield")
                if not shield then
                    shopBuy("Shield") task.wait(1)
                end
            end
            task.wait()
        end
    end)
end)

Auto:Toggle("Mine Trail",function(bool)
    shared.ToggleMT=bool
    spawn(function()
        while shared.ToggleMT do
            shopBuy("Landmine")
            local backpack = Player:WaitForChild("Backpack")
            local tool = backpack:WaitForChild("Landmine", 5)
            if tool then
                tool.Parent = Player.Character
                Player.Character:WaitForChild("Landmine") task.wait(0.1)
                SendKey(0x74)
            end
            task.wait(0.6)
        end
    end)
end)

local pSelect

local pDropList = Troll:Dropdown("Select Player",GetDisplayNames(),true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    pSelect = GetPlayerByDisplayName(SItem)
end)

Troll:Button("Execute",function()
    spawn(function()
    end)
end)


Players.ChildAdded:Connect(function() pDropList:Refresh(GetDisplayNames()) end)
Players.ChildRemoved:Connect(function() pDropList:Refresh(GetDisplayNames()) end)






