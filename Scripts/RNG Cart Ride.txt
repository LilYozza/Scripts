w = library:CreateWindow("Main")


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Rs = game:GetService("ReplicatedStorage")
local virtualUser = game:GetService('VirtualUser')
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local Auto = w:CreateFolder("Auto")

-->Base Variables<--
local Locks = workspace:WaitForChild("Locks")
local Events = workspace:WaitForChild("Events")



local assistForce = 10 

-- select your default here
local sCart = "Star Cart"
local AllCarts = {}
local Carts = Rs:WaitForChild("Carts")
-->Non Return Functions<--

-->Return Functions<--
local function getCarts()
    local tbl = {}
    for _,v in pairs(Carts:GetChildren()) do
        table.insert(tbl, v)
    end
    return tbl
end

local DropList = Auto:Dropdown(sCart,getCarts(),true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sCart = SItem
end)

Auto:Button("Spawn Cart",function()
    spawn(function()
        local args = {
            [1] = sCart
        }
        game:GetService("ReplicatedStorage").Remotes.SpawnCart:FireServer(unpack(args))   
    end)
end)


Auto:Button("Unlimited Fuel",function()
    spawn(function()
        local hum = Player.Character:WaitForChild("Humanoid")
        if hum and hum.Sit == true then
            local hrp = Player.Character:WaitForChild("HumanoidRootPart")
            for _,v in pairs(Events:GetChildren()) do
                local hitbox = v:FindFirstChild("Hitbox")
                if v and v.Name == "GasStation" and hitbox and hrp and hum.Sit == true then
                    firetouchinterest(hrp, hitbox, 0)
                    print("Touched Station")
                    break
                end
            end
        end
    end)
end)

local holdWbool = false
local con
Auto:Toggle("Hold W",function(bool)
    shared.ToggleHW=bool
    spawn(function()
        if shared.ToggleHW then
            repeat 

                local hum = Player.Character:WaitForChild("Humanoid")
                if hum and hum.Sit == true then
                    virtualUser:SetKeyDown("0x77")
                end
                task.wait(1)

            until not shared.ToggleHW
            print("Stopped")
        else
            virtualUser:SetKeyUp("0x77")
            if con then con:Disconnect() end
        end
    end)
end)



Auto:Toggle("Get Upgrades",function(bool)
    shared.ToggleGU=bool
    spawn(function()
        print("---------------")
        while shared.ToggleGU do
            local s,e = pcall(function()
                local hum = Player.Character:WaitForChild("Humanoid")
                if hum and hum.Sit == true then
                    local hrp = Player.Character:WaitForChild("HumanoidRootPart")
                    for _,v in pairs(Events:GetChildren()) do
                        local hitbox = v:FindFirstChild("Hitbox")
                        if v and v.Name == "Garage" and hitbox and hrp and hum.Sit == true then
                            Touch(hitbox, 1.5)
                            local isbool = true
                            repeat isbool = Player.PlayerGui.Garage.Frame.AbsolutePosition.Y < 500 task.wait(0.1) until not isbool or not shared.ToggleGU
                            task.wait()
                        end
                    end
                end
            end) if not s then print (e) end
            task.wait(1)
        end
    end)
end)


Auto:Button("Unlock Areas",function(bool)
    spawn(function()
        for _,v in pairs(Locks:GetChildren()) do
            if v:IsA("Part") then
                v.CanCollide = false
            end
        end
    end)
end)

Auto:Slider("Force",{
    min = 0; max = 1000; precise = true;
},function(value) assistForce = value end)

local uis1, uis2, rs
Auto:Toggle("Assist",function(bool)
    shared.ToggleA=bool
    spawn(function()
        if shared.ToggleA then
            local moveForward = false
            local moveBackward = false
            -- Input handling
            uis1 = UserInputService.InputBegan:Connect(function(input, gpe)
                if gpe then return end
                if input.KeyCode == Enum.KeyCode.W then moveForward = true end
                if input.KeyCode == Enum.KeyCode.S then moveBackward = true end
            end)
            uis2 = UserInputService.InputEnded:Connect(function(input)
                if input.KeyCode == Enum.KeyCode.W then moveForward = false end
                if input.KeyCode == Enum.KeyCode.S then moveBackward = false end
            end)     
            -- Gentle assist loop
            rs = RunService.Heartbeat:Connect(function(dt)
                local root = GetVehicle()
                if not root then print("nope") return end

                local direction = Vector3.zero
                if moveForward then
                    direction = root.CFrame.LookVector * assistForce
                elseif moveBackward then
                    direction = -root.CFrame.LookVector * assistForce
                end

                -- Light push instead of replacing velocity
                root.Velocity = root.Velocity + (direction * dt)
            end)
        else
            uis1:Disconnect() uis1 = nil
            uis2:Disconnect() uis2 = nil
            rs:Disconnect() rs = nil
        end
    end)
end)






