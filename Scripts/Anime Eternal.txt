w = library:CreateWindow("Main")
local Auto = w:CreateFolder("Auto")
local RaidMenu = w:CreateFolder("Raid/Dungeon")
local GachaMenu = w:CreateFolder("GachaMenu")

print("v9")

local CoreGui = game:GetService("CoreGui")
local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer
local rs = game:GetService("ReplicatedStorage")

local PGui = Player.PlayerGui
-->Base Variables<--
local RAIDS = {"Halloween_Raid", "Graveyard_Defense"}
local Dungeons = {"Dungeon_Easy", "Dungeon_Medium", "Dungeon_Hard", "Dungeon_Insane", "Dungeon_Crazy", "Dungeon_Nightmare", "Leaf_Raid"}
local GACHA = { "Dragon_Race", "Saiyan_Evolution", "Pirate_Crew", "Demon_Fruits", "Reiatsu_Color", "Zanpakuto", "Curses", "Demon_Arts","Solo_Hunter_Rank", "Grimoire",
    "Power_Eyes", "Psychic_Mayhem", "Energy_Card_Shop", "Damage_Card_Shop", "Families", "Sins", "Commandments", "Kaiju_Powers", "Ultimate_Skills", "Power_Energy_Runes"
}
-->Non Return Functions<--

local function joinDungeon(_name)
    local args = {
        [1] = {
            ["Action"] = "_Enter_Dungeon",
            ["Name"] = _name
        }
    }

    rs:WaitForChild("Events"):WaitForChild("To_Server"):FireServer(unpack(args))
end

local ScreenGui = CoreGui:FindFirstChild("ScreenGui")
local function getScriptBtn()
    if not ScreenGui then return end
    for _,v in pairs(ScreenGui:GetDescendants())do
        if v:IsA("TextLabel") and v.Text == "Auto Farm Dungeon" then
            local Btn = v.Parent.Parent or nil
            if Btn and Btn:IsA("TextButton") then return Btn end
        end
    end
end
local scriptBtn = getScriptBtn() or nil
local function toggleScriptBtn(_bool)
    if not scriptBtn then return end
    for _,v in pairs(scriptBtn:GetChildren())do
        local UIStroke = v:FindFirstChildWhichIsA("UIStroke")
        if UIStroke then
            if (UIStroke.Color == Color3.fromRGB(120, 120, 120) and _bool) or (UIStroke.Color ~= Color3.fromRGB(120, 120, 120) and not _bool) then
                SendClick(scriptBtn)
            end
        end
    end
end

local Dungeon = PGui:WaitForChild("Dungeon")
local Dungeon_Header = Dungeon:WaitForChild("Default_Header")
local Dungeon_Notification = Dungeon:WaitForChild("Dungeon_Notification")

local function getCurrentDungeon()
    local t = {}
    local Main = Dungeon_Header:WaitForChild("Main"):WaitForChild("Main")
    t = {
        inDungeon = Dungeon_Header.Visible,
        title = Main.Title.Text,
        wave = Main.Wave.Text,
        room = Main.Wave.Text
    }
    return t
end

local function getNotifytDungeon()
    local t = {}
    t = {
        isReady = Dungeon_Notification.Visible,
        name = Dungeon_Notification:GetAttribute("Dungeon_Name"),
        reference = Dungeon_Notification
    }
    return t
end

local function teleportToDungeon()
    local args = {
        [1] = {
            ["Action"] = "Dungeon_Teleport_Back"
        }
    }
    rs:WaitForChild("Events"):WaitForChild("To_Server"):FireServer(unpack(args))
end

local DungeonHelper = false
local sDungeon = ""
local sDungeons = {}


local DungeonList = RaidMenu:Dropdown("Select Dungeon",Dungeons,true,function(SItem)
    sDungeon = SItem
end)

RaidMenu:Button("Add/Remove",function()
    spawn(function()
        if table.find(sDungeons, sDungeon) then
            RemoveFromTable(sDungeons, sDungeon)
            print("Removed:", sDungeon)

            -- ADD TO TABLE
            table.insert(Dungeons, sDungeon)
            DungeonList:Refresh(Dungeons)

        else
            table.insert(sDungeons, sDungeon)
            print("Added:", sDungeon)


            -- REMOVE FROM TABLE
            local pos = RemoveFromTable(Dungeons, sDungeon)
            sDungeon = Dungeons[pos]
            DungeonList:Refresh(Dungeons)
            

        end
    end)
end)

RaidMenu:Button("Reset",function()
    spawn(function()
        sDungeons = {}
        DungeonList:Refresh(Dungeons)
    end)
end)

RaidMenu:Toggle("Helper",function(bool)
    shared.ToggleDH=bool
    spawn(function()DungeonHelper = shared.ToggleDH end)
end)


RaidMenu:Toggle("Join Dungeons",function(bool)
    shared.ToggleJD=bool
    spawn(function()
        while shared.ToggleJD do
            local dungeon = getNotifytDungeon()
            if dungeon and dungeon.isReady and table.find(sDungeons, dungeon.name) then
                print("Joining:", dungeon.name)
                if DungeonHelper then toggleScriptBtn(false) task.wait(0.5) end
                joinDungeon(dungeon.name)
                dungeon.reference.Visible = false
                if DungeonHelper then task.wait(30) toggleScriptBtn(true) task.wait(0.5) end
                --if DungeonHelper then dungeonHelper(30) end
            elseif dungeon and dungeon.isReady then
                dungeon.reference.Visible = false
            end
            task.wait(1)
        end
    end)
end)

local sRaid
local RaidList = RaidMenu:Dropdown("Select Raid",RAIDS,true,function(SItem)
    sRaid = SItem
end)

RaidMenu:Toggle("Auto Raid",function(bool)
    shared.ToggleAR=bool
    spawn(function()
        while shared.ToggleAR do
            local currentRaid = getCurrentDungeon()
            if sRaid and currentRaid and currentRaid.inDungeon == false then
                print("Joining:", sRaid)
                if DungeonHelper then toggleScriptBtn(false) task.wait(0.5) end
                joinDungeon(sRaid)
                repeat task.wait(1) currentRaid = getCurrentDungeon() until not shared.ToggleAR or currentRaid.inDungeon == true
                if DungeonHelper then task.wait(30) toggleScriptBtn(true) task.wait(0.5) end
            end
            task.wait(1)
        end
    end)
end)




Auto:Button("Other",function()
    spawn(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AIHub091/AI-Hub/refs/heads/main/Anime-Eternal/Script.lua"))()
        
        ScreenGui = CoreGui:WaitForChild("ScreenGui",30)
        scriptBtn = getScriptBtn()
        print(scriptBtn)
    end)
end)

local function openGacha(_gacha, _amount)
    local amount = _amount or 1
    local args = {
        [1] = {
            ["Open_Amount"] = amount,
            ["Action"] = "_Gacha_Activate",
            ["Name"] = _gacha
        }
    }

   rs:WaitForChild("Events"):WaitForChild("To_Server"):FireServer(unpack(args))
end


local sGacha
local sGachaAmount = 1
local DropListG1 = GachaMenu:Dropdown("1",{1,2,3,4,5},true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sGacha = SItem
end)

local DropListG2 = GachaMenu:Dropdown("Select Gacha",GACHA,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sGacha = SItem
end)

GachaMenu:Toggle("Auto Gacha",function(bool)
    shared.ToggleAG=bool
    spawn(function()
        while shared.ToggleAG do
            if sGacha then
                openGacha(sGacha, sGachaAmount)
            end
            task.wait(1)
        end
    end)
end)