w = library:CreateWindow("Main")
local Auto = w:CreateFolder("Auto")

print("v3")

local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer
local rs = game:GetService("ReplicatedStorage")

local PGui = Player.PlayerGui
-->Base Variables<--
local RAIDS = {"Halloween_Raid"}
local Dungeons = {"Dungeon_Easy", "Dungeon_Medium", "Dungeon_Hard", "Dungeon_Insane", "Dungeon_Crazy", "Dungeon_Nightmare", "Leaf_Raid"}
-->Non Return Functions<--

local function joinDungeon(_name)
    local args = {
        [1] = {
            ["Action"] = "_Enter_Dungeon",
            ["Name"] = _name
        }
    }

    rs:WaitForChild("Events"):WaitForChild("To_Server"):FireServer(unpack(args))
end


local Dungeon = PGui:WaitForChild("Dungeon")
local Dungeon_Header = Dungeon:WaitForChild("Default_Header")
local Dungeon_Notification = Dungeon:WaitForChild("Dungeon_Notification")

local function getCurrentDungeon()
    local t = {}
    local Main = Dungeon_Header:WaitForChild("Main"):WaitForChild("Main")
    t = {
        inDungeon = Dungeon_Header.Visible,
        title = Main.Title.Text,
        wave = Main.Wave.Text,
        room = Main.Wave.Text
    }
    return t
end

local function getNotifytDungeon()
    local t = {}
    t = {
        isReady = Dungeon_Notification.Visible,
        name = Dungeon_Notification:GetAttribute("Dungeon_Name"),
        reference = Dungeon_Notification
    }
    return t
end

local function teleportToDungeon()
    local args = {
        [1] = {
            ["Action"] = "Dungeon_Teleport_Back"
        }
    }
    rs:WaitForChild("Events"):WaitForChild("To_Server"):FireServer(unpack(args))
end

local function dungeonHelper(_distance, _timer)
    local bool1 = false
    local distance = _distance or 0
    local timer = _timer or 30
    spawn(function() bool1 = Timer(30) end)
    for i=1,5 do 
        teleportToDungeon() task.wait(0.1)
    end task.wait()
    local oldPos = Player.Character:WaitForChild("HumanoidRootPart").CFrame
    repeat Player.Character:WaitForChild("HumanoidRootPart").CFrame = oldPos task.wait() until bool1
    teleportToDungeon() task.wait(0.5)
    if distance > 0 then
        local h = Player.Character:WaitForChild("Humanoid")
        local r = Player.Character:WaitForChild("HumanoidRootPart")
        h:MoveTo(r.Position + r.CFrame.LookVector* distance)
    end
end

local DungeonHelper = false
local sDungeon = ""
local sDungeons = {}


local DungeonList = Auto:Dropdown("Select Dungeon",Dungeons,true,function(SItem)
    sDungeon = SItem
end)

Auto:Button("Add/Remove",function()
    spawn(function()
        if table.find(sDungeons, sDungeon) then
            RemoveFromTable(sDungeons, sDungeon)
            print("Removed:", sDungeon)

            -- ADD TO TABLE
            table.insert(Dungeons, sDungeon)
            DungeonList:Refresh(Dungeons)

        else
            table.insert(sDungeons, sDungeon)
            print("Added:", sDungeon)


            -- REMOVE FROM TABLE
            local pos = RemoveFromTable(Dungeons, sDungeon)
            sDungeon = Dungeons[pos]
            DungeonList:Refresh(Dungeons)
            

        end
    end)
end)

Auto:Button("Reset",function()
    spawn(function()
        sDungeons = {}
        DungeonList:Refresh(Dungeons)
    end)
end)


Auto:Toggle("Join Dungeons",function(bool)
    shared.ToggleJD=bool
    spawn(function()
        while shared.ToggleJD do
            local dungeon = getNotifytDungeon()
            if dungeon and dungeon.isReady and table.find(sDungeons, dungeon.name) then
                print("Joining:", dungeon.name)
                joinDungeon(dungeon.name)
                dungeon.reference.Visible = false
                if DungeonHelper then dungeonHelper(30) end
            elseif dungeon and dungeon.isReady then
                dungeon.reference.Visible = false
            end
            task.wait(1)
        end
    end)
end)

local sRaid
local RaidList = Auto:Dropdown("Select Raid",RAIDS,true,function(SItem)
    sRaid = SItem
end)

Auto:Toggle("Auto Raid",function(bool)
    shared.ToggleAR=bool
    spawn(function()
        while shared.ToggleAR do
            local currentRaid = getCurrentDungeon()
            if sRaid and currentRaid and currentRaid.inDungeon == false then
                print("Joining:", sRaid)
                joinDungeon(sRaid)
                repeat task.wait(1) currentRaid = getCurrentDungeon() until not shared.ToggleAR or currentRaid.inDungeon == true
                if DungeonHelper then dungeonHelper() end
            end
            task.wait(1)
        end
    end)
end)

Auto:Toggle("Helper",function(bool)
    shared.ToggleDH=bool
    spawn(function()DungeonHelper = shared.ToggleDH end)
end)


Auto:Button("Other",function()
    spawn(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AIHub091/AI-Hub/refs/heads/main/Anime-Eternal/Script.lua"))()
    end)
end)



