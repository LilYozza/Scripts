

local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")
local Eggs = w:CreateFolder("Eggs")

-->Base Variables<--
local sWorld = "World1"
local Worlds = {}

local Wins = game:GetService("Workspace").Wins
local Teleporters = game:GetService("Workspace").Teleporters
local Locations = Teleporters:FindFirstChild("Locations")
local FEgg = game:GetService("Workspace").Eggs

-->Non Return Functions<--
local function Win()
    local closest
    local _max = 0
    local sPart
    for _,v in pairs(Wins:GetChildren()) do
        local location = v:FindFirstChild("Location")
        if location then
            local cWorld = Teleporters:FindFirstChild(location.Value.Name)
            if cWorld then

                local WinsReq = cWorld:FindFirstChild("Wins")
                local pWins = Player.leaderstats:FindFirstChild("Wins")

                if Player.UnlockedWorlds:FindFirstChild(location.Value.Name) and WinsReq.Value >= _max then
                    _max = WinsReq.Value
                    sPart = v
                elseif WinsReq and pWins then
                    if WinsReq.Value <= pWins.Value and (closest == nil or WinsReq.Value > closest) then
                        closest = WinsReq.Value
                        sPart = v
                    end
                end
            end
        end
    end
    if sPart then
        --print(sPart, sPart.Location.Value)
        Touch(sPart)
    end
end

-->Return Functions<--
local function checkUnlocked()
end

local function GetWorlds()
    local _tbl = {}
    for _,v in pairs(game.Workspace:GetChildren()) do
        if string.match(v.Name, "World") then
            table.insert(_tbl, v)
        end
    end
    return _tbl
end 

Worlds = GetWorlds()
local DropList = Auto:Dropdown(sWorld,Worlds,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sWorld = SItem
end)

Auto:Button("Teleport",function(bool)
    spawn(function()
        local selectWorld = game.Workspace:FindFirstChild(sWorld)
        if selectWorld then
            local tpPoint = selectWorld:FindFirstChild("Teleport") or selectWorld:FindFirstChild("SpawnLocation")
            if tpPoint then
                MoveTo(tpPoint)
            end
        end
    end)
end)

Auto:Button("Win",function(bool)
    spawn(function()
        Win()
    end)
end)

Auto:Toggle("Auto Click",function(bool)
    shared.ToggleAC=bool
    spawn(function()
        while shared.ToggleAC do
            game:GetService("ReplicatedStorage").IncreaseSpeed:FireServer()
            task.wait()
        end
    end)
end)

Auto:Toggle("Auto Win",function(bool)
    shared.ToggleAW=bool
    spawn(function()
        while shared.ToggleAW do
            Win()
            task.wait()
        end
    end)
end)

Auto:Toggle("Auto Rebirth",function(bool)
    shared.ToggleAR=bool
    spawn(function()
        while shared.ToggleAR do
            local pWins = Player.leaderstats:FindFirstChild("Wins")
            local reqWins = Player:FindFirstChild("requiredwins")
            if reqWins and pWins and pWins.Value >= reqWins.Value then
                game:GetService("ReplicatedStorage").RebirthEvent:FireServer()
            end 
            task.wait(1)
        end
    end)
end)

Auto:Toggle("Auto Spin",function(bool)
    shared.ToggleAS=bool
    spawn(function()
        while shared.ToggleAS do
            local SpinCount = Player.PlayerStats:FindFirstChild("Spin")
            if SpinCount and SpinCount.Value > 0 then
                game:GetService("ReplicatedStorage").SpinFolder.Spin:FireServer()
            end
            task.wait(1)
        end
    end)
end)


local sEgg = "Random132"

local DropList1 = Eggs:Dropdown("Select Egg",FEgg:GetChildren(),true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sEgg = SItem
end)

Eggs:Toggle("Auto Hatch",function(bool)
    shared.ToggleAH=bool
    spawn(function()
        local s,e = pcall(function()
            while shared.ToggleAH do
                local _sEgg = FEgg:FindFirstChild(sEgg)
                if _sEgg then
                    local priceTag = _sEgg.PriceBrick.SurfaceGui.Cost.Text:match("^%S+")
                    local price = fromSuffixString(priceTag)
                    local pWins = Player.leaderstats:FindFirstChild("Wins")
                    if price and pWins and pWins.Value >= price then
                        local args = {
                            [1] = _sEgg.Name,
                            [2] = "Single"
                        }

                        game:GetService("ReplicatedStorage").RemoteEvents.EggOpened:InvokeServer(unpack(args))
                        task.wait(4)                    
                    end
                end
                task.wait()
            end
        end) if not s then print(e) end
    end)
end)







