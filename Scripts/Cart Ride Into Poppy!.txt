--Game Link:

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()
local FullBright = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/FullBright.txt'))
local ESP = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/ESP.txt'))

local Player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local character = Player.Character or Player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local virtual = game:GetService("VirtualUser")

local PlayerSelect, CartSelect
local SColor = BrickColor.new("Lime green")
local DColor = BrickColor.new("Neon orange")
local PlayerList = {} local BlackList = {}
local RollerCoaster = workspace:FindFirstChild("RollerCoaster")
local Finish = workspace:FindFirstChild("Finish")
local PathGivers = Finish:FindFirstChild("PathGivers")
local Carts = RollerCoaster:FindFirstChild("Carts")
local Interactive = RollerCoaster:FindFirstChild("Interactive")

local w = library:CreateWindow("Main")
local Troll = w:CreateFolder("Troll")
local Other = w:CreateFolder("Other")
local Misc = w:CreateFolder("Misc")

function SelectColor(model, p)
    for _,v in pairs(model:GetChildren()) do
        if v:IsA("Part") and v.Name == "Part" then
            v.BrickColor = p
        end
    end
end

function CreateTag(c, h)
    GUI = Instance.new("BillboardGui", h)
    GUI.StudsOffsetWorldSpace = Vector3.new(0,2.5,0)
    GUI.AlwaysOnTop = true
    GUI.Size = UDim2.new(3, 0, 1, 0)
    TextLabel = Instance.new("TextLabel", GUI)
    TextLabel.Text =  h.Parent:WaitForChild("Humanoid").DisplayName
    TextLabel.BackgroundTransparency = 1
    TextLabel.Font = "ArialBold"
    TextLabel.TextSize = 15
    TextLabel.TextColor3 = c
    TextLabel.Size = UDim2.new(1,0,1,0)
end

local DropList = Troll:Dropdown("Select Player",PlayerList,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    PlayerSelect = SItem
    if PlayerSelect == "All" then CartSelect = "All"
    else for _,v in pairs(game.Players:GetChildren()) do if PlayerSelect == v.character:WaitForChild("Humanoid").DisplayName then PlayerSelect = v break end end
        PlayerSelect.character:WaitForChild("Humanoid").SeatPart.Parent.Name = PlayerSelect.Name
        CartSelect = PlayerSelect.character:WaitForChild("Humanoid").SeatPart.Parent.Name
    end
    if CartSelect == "All" then
        for _,v in pairs(Carts:GetDescendants()) do
            if v:IsA("Part") and v.Name == "Part" then
                if v.BrickColor == DColor then SelectColor(v.parent, SColor) end
            end
        end
        
    else
        for _,v in pairs(Carts:GetDescendants()) do
            if v:IsA("Part") and v.Name == "Part" then
                if v.BrickColor == SColor then SelectColor(v.parent, DColor) end
            end
        end
        for _,v in pairs(Carts:FindFirstChild(CartSelect):FindFirstChild("Body"):GetChildren()) do
            if v:IsA("Part") and v.Name == "Part" then
                if v.BrickColor == DColor then SelectColor(v.parent, SColor) end
            end
        end
    end
end)

function UpdatePlayers()
    table.clear(PlayerList) table.insert(PlayerList, "All")
    for _,v in pairs(game.Players:GetChildren()) do
        if v.character:WaitForChild("Humanoid"). sit then
            table.insert(PlayerList, v.character:WaitForChild("Humanoid").DisplayName)
        end
        if not table.find(BlackList, v.Name) then table.insert(BlackList, v.Name)
            v.Character:WaitForChild("Humanoid").Seated:Connect(onSeated)
        end
        if not v.Character:WaitForChild("Head"):FindFirstChild("BillboardGui") then
            CreateTag((Color3.new(255, 0, 0)), v.character:WaitForChild("Head")) wait()
        end
    end
    DropList:Refresh(PlayerList)
end

function onSeated(isSeated, seat) UpdatePlayers() end
Players.PlayerAdded:Connect(function(player) UpdatePlayers() end)
Players.PlayerRemoving:Connect(function(player) UpdatePlayers() end)    

function GetPlayers()
    table.clear(PlayerList) table.insert(PlayerList, "All")
    for _,v in pairs(game.Players:GetChildren()) do
        if v.Character:WaitForChild("Humanoid").sit then
            table.insert(PlayerList, v.character:WaitForChild("Humanoid").DisplayName)
            print("Conntecting...", v.Name)
        end
        if not table.find(BlackList, v.Name) then
            table.insert(BlackList, v.Name)
            v.Character:WaitForChild("Humanoid").Seated:Connect(onSeated) wait()
        end
        if not v.Character:WaitForChild("Head"):FindFirstChild("BillboardGui") then
            CreateTag((Color3.new(255, 0, 0)), v.character:WaitForChild("Head")) wait()
        end
    end
    DropList:Refresh(PlayerList)
end GetPlayers() 

Troll:Toggle("Speed Up",function(bool)
    shared.toggle1 = bool
    spawn (function()
        while shared.toggle1 do
            if CartSelect == "All" and shared.toggle1 then
                for _,v in pairs(Carts:GetDescendants()) do
                    if v:IsA("ClickDetector") and v.Parent.Name:match("Up") then
                        fireclickdetector(v) wait()
                    end
                end
            else
                for _,v in pairs(Carts:FindFirstChild(CartSelect):GetDescendants()) do
                    if v:IsA("ClickDetector") and v.Parent.Name:match("Up") then
                        fireclickdetector(v) wait()
                    end
                end
            end
        	wait()
        end
    end)
end)

Troll:Toggle("Speed Down",function(bool)
    shared.toggle2 = bool
    spawn (function()
        while shared.toggle2 do
            if CartSelect == "All" and shared.toggle2 then
                for _,v in pairs(Carts:GetDescendants()) do
                    if v:IsA("ClickDetector") and v.Parent.Name:match("Down") then
                        fireclickdetector(v) wait()
                    end
                end
            else
                for _,v in pairs(Carts:FindFirstChild(CartSelect):GetDescendants()) do
                    if v:IsA("ClickDetector") and v.Parent.Name:match("Down") then
                        fireclickdetector(v) wait()
                    end
                end
            end
        	wait()
        end
    end)
end)

Troll:Button("Break",function()
    spawn(function()
        if CartSelect == "All" then
            for _,v in pairs(Carts:GetDescendants()) do
                if v:IsA("ClickDetector") and v.Parent.Name:match("On") then
                    fireclickdetector(v) wait()
                end
            end
        else
            for _,v in pairs(Carts:FindFirstChild(CartSelect):GetDescendants()) do
                if v:IsA("ClickDetector") and v.Parent.Name:match("On") then
                    fireclickdetector(v) wait()
                end
            end
        end
    end)
end)

Troll:Button("Spawn",function()
    spawn(function()
        for _,v in pairs(Interactive:GetDescendants()) do
            if v.Name == "ProximityPrompt" and v.Parent.Name == "1" or v.Parent.Name == "2" then
                v.MaxActivationDistance = 99999
                fireproximityprompt(v)
            end
        end
    end)
end)

Troll:Button("Refresh",function()
    spawn(function()
        UpdatePlayers() DropList:Refresh(PlayerList)
    end)
end)

Other:Button("Give Items",function()
    spawn(function()
        for _,v in pairs(PathGivers:GetDescendants()) do
            if v.Name == "ProximityPrompt" then
                v.MaxActivationDistance = 99999
                fireproximityprompt(v) wait(1)
            end
        end
    end)
end)

Other:Button("Teleport Start",function()
    spawn(function()
        Player.character:WaitForChild("HumanoidRootPart").CFrame = workspace:FindFirstChild("SpawnLocation").CFrame + Vector3.new(0,6,0)
    end)
end)

Other:Button("Teleport End",function()
    spawn(function()
        Player.character:WaitForChild("HumanoidRootPart").CFrame = Finish:FindFirstChild("Baseplate").CFrame + Vector3.new(0,6,0)
    end)
end)

Misc:Toggle("Anti AFK",function(bool)
    shared.Misc1 = bool
    spawn (function()
        if shared.Misc1 then
            game:GetService("Players").LocalPlayer.Idled:connect(function()
            virtual:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            virtual:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            end)
        end
    end)
end)

Misc:Toggle("Full Bright",function(bool)
    shared.Misc2 = bool
    spawn (function()
        FullBright()
    end)
end)

Misc:Toggle("Infinite Jump",function(bool)
    shared.Misc3 = bool
    spawn (function()
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if shared.Misc3 then
                Player.character:WaitForChild("Humanoid"):ChangeState("Jumping")
            end
        end)
    end)
end)

Misc:Toggle("Teleport",function(bool)
    shared.Misc4 = bool
    spawn(function()
        local mouse = Player:GetMouse()
        mouse.KeyDown:Connect(function(key)
            if key == "q" and shared.Misc4 then
                if mouse.Target then
                    Player.character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
                end
            end
        end)
    end)
end)

local Speed = Misc:Slider("Slider",{
    ['default'] = 16;
    ['min'] = 0;
    ['max'] = 100;
    ['precise'] = true;
},function(value)
    game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
    local Players = game:GetService("Players")
end)

Misc:Button("3rd Person",function()
    game:GetService('Players').LocalPlayer.CameraMode = 'Classic'
    Player.CameraMaxZoomDistance = 150
    Player.CameraMinZoomDistance = 0
end)

Misc:Button("ESP",function()
    ESP()
end)

Misc:DestroyGui()
