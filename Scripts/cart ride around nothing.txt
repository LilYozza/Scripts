local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()w = library:CreateWindow("Main")
local Essential_Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Essential_Functions.txt"))()


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")
local Cart = w:CreateFolder("Cart")
local PlrS= w:CreateFolder("Troll")
local Items=w:CreateFolder("Items")

local PlayerSelect
local PlayerList={}
local savedPotion
local CartT={"Cart", "CartXL", "RaceCart", "HackerCart", "BigCapacityCart"}
local Carts=Workspace:FindFirstChild("Carts")
local Spawners=Workspace:FindFirstChild("Spawners")

local CartCheckRoom=Workspace:FindFirstChild("CartCheckRoom")
local CartCheckRoomFinish=Workspace:FindFirstChild("CartCheckRoomFinish")

local function GetCart(s)
    if s then 
        if s.Name=="VehicleSeat" then   
            return s.Parent 
        else
            return s.Parent.Parent 
        end 
    end
end

local function getEngine(_cart)
    for _,v in pairs(_cart:GetChildren())do
        local wall = v:FindFirstChild("Walls")
        if wall and wall:FindFirstChild("GeneratorWall") then
            return wall:FindFirstChild("GeneratorWall")
        end
    end

end

local function removeTouchParts(_part)
    for _,v in pairs(_part:GetDescendants()) do
        if v:IsA("TouchTransmitter") then
            v:Destroy()
        end
    end
end


local function CreateTag(c, player)GUI = Instance.new("BillboardGui", player.Character:WaitForChild("Head")) GUI.StudsOffsetWorldSpace = Vector3.new(0,2.5,0) GUI.AlwaysOnTop = true GUI.Size = UDim2.new(3, 0, 1, 0) TextLabel = Instance.new("TextLabel", GUI) TextLabel.Text =  player.DisplayName TextLabel.BackgroundTransparency = 1 TextLabel.Font = "ArialBold" TextLabel.TextSize = 15 TextLabel.TextColor3 = c TextLabel.Size = UDim2.new(1,0,1,0) end

local function FindItem(item)
    for _,v in pairs(Players:GetChildren())do
        if v.Backpack:FindFirstChild(item)then return v.Backpack:FindFirstChild(item)end
        if v.Character:FindFirstChild(item)then return v.Character:FindFirstChild(item)end
    end
end

local function RoomCheck(Room, Type)
    local _trig = Room:FindFirstChild("TriggerZone")
    local _HumChk = Room:FindFirstChild("HumanoidCheckZone")
    
    if _trig and _HumChk then
        repeat Player.Character:WaitForChild("HumanoidRootPart").CFrame=_trig.CFrame task.wait() until Room.Light.SpotLight.Enabled==true task.wait()
        Player.Character:WaitForChild("HumanoidRootPart").CFrame= _HumChk.CFrame
        Player.Character:WaitForChild("Humanoid").Sit=true
        repeat task.wait() until Player.Team.name == Type
        Player.Character:WaitForChild("Humanoid").Sit=false
    end
end

Auto:Button("Complete",function()
    spawn(function()
    if Player.Team.Name=="starting to suffer" then RoomCheck(CartCheckRoom, "suffering")end
    if Player.Team.Name=="suffering" then RoomCheck(CartCheckRoomFinish, "suffered")end
    end)
end)



Auto:Toggle("Auto Start",function(bool)
    shared.toggle1 = bool
    spawn (function()
        while shared.toggle1 do
            for _,v in pairs(Carts:GetChildren())do
                if shared.toggle1 and table.find(CartT, v.Name) then
                    local vals = v:FindFirstChild("Values")
                    if vals and vals:FindFirstChild("IsOn").Value == false then
                        local engine = getEngine(v)
                        if engine then
                            fireproximityprompt(engine.ProximityPrompt )
                        end
                    end
                end
            end
        	task.wait(0.5)
        end
    end)
end)

Auto:Toggle("Auto Stop",function(bool)
    shared.toggle2 = bool
    spawn (function()
        while shared.toggle2 do
            for _,v in pairs(Carts:GetChildren())do
                if shared.toggle2 and table.find(CartT, v.Name) then
                    local vals = v:FindFirstChild("Values")
                    if vals and vals:FindFirstChild("IsOn").Value == true then
                        local engine = getEngine(v)
                        if engine then
                            fireproximityprompt(engine.ProximityPrompt )
                        end
                    end
                end
            end
        	task.wait(0.5)
        end
    end)
end)
Auto:Toggle("Auto Spawner",function(bool)
    shared.toggle3 = bool
    spawn (function()
        while shared.toggle3 do
            for _,v in pairs(Spawners:GetChildren())do
                if shared.toggle3 and v:FindFirstChild("ProximityPrompt") then
                    fireproximityprompt(v:FindFirstChild("ProximityPrompt"))task.wait()
                end
            end
        	task.wait(0.2)
        end
    end)
end)

local BumpTbl = {"Bump", "OneWayRail"}
Auto:Toggle("Bumps",function(bool)
    spawn(function() ChangeCollide(BumpTbl, not bool) end)
end)

local DoorTbl = {"DoorPair"}
Auto:Toggle("Doors",function(bool)
    spawn(function()ChangeCollide(DoorTbl, not bool)end)
end)

Cart:Button("Remove Touch",function()
    spawn(function()
        if Player.Character:WaitForChild("Humanoid").SeatPart then
            local PCart1=GetCart(Player.Character:WaitForChild("Humanoid").SeatPart) or nil
            if PCart1 then
                removeTouchParts(PCart1)
            end
        end
    end)
end)

Cart:Button("Easy Cart",function()
    spawn(function()
        if Player.Character:WaitForChild("Humanoid").SeatPart then
            for _,v in pairs(Player.Character:WaitForChild("Humanoid").SeatPart.Parent:GetDescendants())do
                if v:IsA("TouchTransmitter") and not v.Parent.Name:match("Seat") then v:Destroy() end
                if v.Name=="Wheel" and v:IsA("BasePart") then v.Size=Vector3.new(0.7, 1.1, 1.1) end
                if v.Name=="Flange" and v:IsA("BasePart") then v.Size=Vector3.new(0.1, 1.7, 1.7)end
                if v.Name=="Suspension" and v:IsA("SpringConstraint") then v.LimitsEnabled=true v.MaxLength=1 v.MinLength=0 end
            end
        end
    end)
end)

Cart:Button("Reset Cart",function()
    spawn(function()
        if Player.Character:WaitForChild("Humanoid").SeatPart then
            for _,v in pairs(Player.Character:WaitForChild("Humanoid").SeatPart.Parent:GetDescendants())do
--                if v:IsA("TouchTransmitter") and not v.Parent.Name:match("Seat") then v:Destroy() end
                if v.Name=="Wheel" and v:IsA("BasePart") then v.Size=Vector3.new(0.4, 1.1, 1.1) end
                if v.Name=="Flange" and v:IsA("BasePart") then v.Size=Vector3.new(0.1, 1.5, 1.5)end
                if v.Name=="Suspension" and v:IsA("SpringConstraint") then v.LimitsEnabled=true v.MaxLength=1 v.MinLength=0 end
            end
        end
    end)
end)
local DropList = PlrS:Dropdown("Select Player",PlayerList,true,function(SItem)
    for _,v in pairs(game.Players:GetChildren())do
        if  v.DisplayName==SItem then
            PlayerSelect = v break
        end
    end
end)

local function AddPlayer(player)
    if not table.find(PlayerList,player.DisplayName) then
        table.insert(PlayerList, player.DisplayName)
        DropList:Refresh(PlayerList)
    end
    if player.Character:WaitForChild("Head",5) and not player.Character.Head:FindFirstChild("BillboardGui") then
    CreateTag((Color3.new(255, 0, 0)), player) end
end


local function RemovePlayer(player)
    if table.find(PlayerList,player.DisplayName) then
        RemoveFromTable(PlayerList, player.DisplayName)
        DropList:Refresh(PlayerList)
    end
end

local function GetPlayers()
    if not PlayerList[1] then
        for _,v in pairs(Players:GetChildren())do
            table.insert(PlayerList, v.DisplayName)
            DropList:Refresh(PlayerList)
            v.CharacterAdded:Connect(function()AddPlayer(v)end)
            if v.Character:WaitForChild("Head",5) and not v.Character.Head:FindFirstChild("BillboardGui") then 
                CreateTag((Color3.new(255, 0, 0)), v)
            end
        end
    end
end GetPlayers()

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        AddPlayer(player)
        local _f = player.Character:FindFirstChild("expensive flight potion") or player.Backpack:FindFirstChild("expensive flight potion")
        if _f then
            local _p = Player.Character:FindFirstChild("expensive flight potion") or Player.Backpack:FindFirstChild("expensive flight potion")
            if not _p then local _newP = _f:Clone() _newP.Parent = Player.Backpack end
        end
    end)
end)
Players.PlayerRemoving:Connect(function(player)RemovePlayer(player)end)

PlrS:Toggle("Auto Aim",function(bool)
    shared.toggle1 = bool
    spawn (function()
        while shared.toggle1 do
            local success, err = pcall(function()
            if Workspace:FindFirstChild("ShootPartC4")then
                local PCart
                if PlayerSelect and PlayerSelect.Character:WaitForChild("Humanoid") and PlayerSelect.Character:WaitForChild("Humanoid").SeatPart then
                    PCart=PlayerSelect.Character:WaitForChild("Humanoid").SeatPart
                end
                for _,v in pairs(Workspace:GetChildren())do
                    if v.Name=="ShootPartC4" and PCart then v.CFrame=PCart.CFrame v.WeldConstraint.Part0=PCart v.WeldConstraint.Part1=PCart Touch(v,PCart) end
                end
            end end)
        	task.wait()
        end
    end)
end)

PlrS:Button("MoveCartTo",function()
    spawn(function()
        if not PlayerSelect then return end
        --local back= Player.Character:WaitForChild("HumanoidRootPart").CFrame
        local PCart1=GetCart(Player.Character:WaitForChild("Humanoid").SeatPart) or nil
        local PCart2=GetCart(PlayerSelect.Character:WaitForChild("Humanoid").SeatPart)
        if not PCart1 or not PCart2 then 
            return 
        else 
            
            --print(PCart1, PCart2)
            Touch(PCart2.MainCar.CartBase, PCart1.MainCar.CartBase)
            --[[
            if PCart2:IsA("Part") then
                for _, v in pairs(PCart2:GetDescendants())do
                    if v:IsA("Part") and v.FindFirstChild("TouchTransmitter") then

                    end
                end
            
            end

            --OLD
            --MovePart(PCart1, PCart2.MainCar.CartBase)
            --Player.Character:WaitForChild("Humanoid").Sit=false task.wait() Player.Character:WaitForChild("HumanoidRootPart").CFrame=back
            ]]--
        end
    end)
end)

PlrS:Button("Refresh",function()
    spawn(function()end)
end)

PlrS:Button("Hack Check",function()
    spawn(function()
        if PlayerSelect.Character:FindFirstChild("expensive flight potion") or PlayerSelect.Backpack:FindFirstChild("expensive flight potion")then print("Has Flying Potion")else print("Does Not Have Flying Potion") end
    end)
end)

PlrS:Button("AllCarts",function()
    spawn(function()

        for _,v in pairs(Carts:GetChildren()) do
            if table.find(CartT, v.Name) then
                local PCart1=GetCart(Player.Character:WaitForChild("Humanoid").SeatPart)
                
                

                local _cartBase = v.MainCar:FindFirstChild("CartBase")
                local pcart = PCart1.MainCar:FindFirstChild("CartBase")
                if _cartBase and pcart then 
                    removeTouchParts(PCart1)
                    Touch(_cartBase, pcart)
                end
            end
        end
    end)
end)

Items:Button("Explosion Tool",function()
    spawn(function()
        local it=FindItem("dangerous bomb creator") it=it:Clone() it.Parent=Player.Backpack
    end)
end)

local ItemPo
Items:Button("Fly Potion",function()
    spawn(function()
        if not ItemPo then ItemPo = Player.CharacterAdded:Connect(function()
            local savedPotion=game.ReplicatedStorage:FindFirstChild("expensive flight potion")
            if savedPotion then local it=savedPotion:Clone() it.Parent=Player.Backpack else
            local it=FindItem("expensive flight potion") it=it:Clone()it.Parent=Player.Backpack it1=it:Clone() it1.Parent=game.ReplicatedStorage end
        end)end
        local savedPotion=game.ReplicatedStorage:FindFirstChild("expensive flight potion")
        if savedPotion then local it=savedPotion:Clone() it.Parent=Player.Backpack else
        local it=FindItem("expensive flight potion") it=it:Clone()it.Parent=Player.Backpack it1=it:Clone() it1.Parent=game.ReplicatedStorage end
    end)
end)



local Miscload = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Misc.txt'))()
