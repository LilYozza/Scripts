w = library:CreateWindow("Main")

local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer

local Auto = w:CreateFolder("Auto")

local PowerUp = workspace:FindFirstChild("Meshes/shrink platform")
local Eggs = workspace:FindFirstChild("Eggs")
local Trophies = workspace:FindFirstChild("Trophies")
local Drops = {"Gem", "Plasma GrenadePickup", "Sticky BombPickup", "Black Hole GrenadePickup", "GrenadePickup", "Stun GrenadePickup", "MeteoritePickup"}

local function Touch(p,t)firetouchinterest(Player.Character:WaitForChild("HumanoidRootPart"),p,0)firetouchinterest(Player.Character:WaitForChild("HumanoidRootPart"),p,1)task.wait(t)end

Auto:Toggle("Auto Pickup",function(bool)
    shared.toggle1 = bool
    spawn (function()
        while shared.toggle1 do
            for _,v in pairs(workspace:GetChildren()) do
                if table.find(Drops, v.Name) and shared.toggle1 then
                    for key, value in pairs(v:GetDescendants()) do
                        if value:IsA("TouchTransmitter") then
                            Touch(value.Parent)
                        end
                    end
                end
            end
        	task.wait()
        end
    end)
end)

Auto:Button("Auto Eggs",function()
    spawn (function()
        for _,v in pairs(Eggs:GetDescendants()) do
            if v:IsA("TouchTransmitter") then Touch(v.Parent,0.1)
            end
        end
    end)
end)

Auto:Button("Auto Trophies",function()
    spawn (function()
        for _,v in pairs(Trophies:GetDescendants()) do
            if v:IsA("TouchTransmitter") then Touch(v.Parent,0.1)
            end
        end
    end)
end)

Auto:Button("PowerUp (WIP)",function()
    back = Player.character:WaitForChild("HumanoidRootPart").CFrame
    Player.character:WaitForChild("HumanoidRootPart").Position = PowerUp:FindFirstChild("Hitbox").Position
    
    fireproximityprompt(game:GetService("Workspace")["Meshes/shrink platform"].Hitbox.ProximityPrompt)
    
    Player.character:WaitForChild("HumanoidRootPart").CFrame = back
end)





