local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/UILibrary.txt')))()w = library:CreateWindow("Main")
local Essential_Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Essential_Functions.txt"))()


local Players=game:GetService("Players")
local Player=game.Players.LocalPlayer
local ReplicatedStorage=game:GetService("ReplicatedStorage")

local Auto = w:CreateFolder("Auto")

-->Base Variables<--
local PWins = Player.leaderstats:FindFirstChild("Wins")
local RWins = Player:FindFirstChild("requiredwins")
local UnlockedWorlds = Player:FindFirstChild("UnlockedWorlds")

local Wins = Workspace:FindFirstChild("Wins")
local Teleporters = Workspace:FindFirstChild("Teleporters")
local Locations = Teleporters:FindFirstChild("Locations")

local LocationTable = Locations:GetChildren()
local sWorld = Locations["Earth"]

local PData = Player:FindFirstChild("Data")
local AutoClick = Player:FindFirstChild("AutoClick")
-->Non Return Functions<--

-->Return Functions<--
local function getWorld(_world)
    local closest, cWorld
    for _, v in pairs(Locations:GetChildren()) do
        local wins = v:FindFirstChild("Wins")
        if wins then
            local w = wins.Value
            if w <= _world and (not closest or w > closest) or UnlockedWorlds[v.Name] then
                closest = w
                cWorld = v
            end
        end
    end
    return cWorld
end

local function getWinPoint(_world)
    for _,v in pairs(Wins:GetChildren())do
        local location = v:FindFirstChild("Location")
        if location and v.Name:match("World") and location.Value == _world then
            return v
        end
    end
end

local function getPlayerWorld()
    local curr, min = nil, math.huge
    for _,v in pairs(Locations:GetChildren()) do
        local dis = GetDistance(v)
        if dis and dis < min then
            curr = v
            min = dis
        end
    end
    return curr
end

local DropList = Auto:Dropdown("Earth",LocationTable,true,function(SItem) --true/false, replaces the current title "Dropdown" with the option that t
    sWorld = Locations[SItem]
end)

Auto:Button("Teleport",function()
    spawn(function()
        if sWorld then MoveTo(sWorld, Vector3.new(0,5,0)) end
    end)
end)


Auto:Toggle("Auto Clicker",function(bool)
    shared.ToggleAC=bool
    spawn(function()
        AutoClick.Value = shared.ToggleAC
        ReplicatedStorage.AutoClick:FireServer(shared.ToggleAC)
    end)
end)

Auto:Toggle("Auto Win",function(bool)
    shared.ToggleAW=bool
    spawn(function()
        while shared.ToggleAW do    
            --Check 
            local world = getWorld(PWins.Value)
            local winPoint = getWinPoint(world)
            if winPoint then Touch(winPoint) end
            
            task.wait(5)
        end
    end)
end)

Auto:Toggle("Auto Rebirth",function(bool)
    shared.ToggleAR=bool
    spawn(function()
        while shared.ToggleAR do
            if PWins.Value >= RWins.Value then
                ReplicatedStorage.RebirthEvent:FireServer()
            end
            task.wait()
        end
    end)
end)

Auto:Button("Gamepasses",function()
    spawn(function()
        AutoClick.Value = 1
        for _,v in pairs(PData:GetChildren())do
            if v:IsA("BoolValue") then v.Value = 1 end
        end
    end)
end)

local Miscload = loadstring(game:HttpGet('https://raw.githubusercontent.com/LilYozza/Scripts/main/Misc/Misc.txt'))()
